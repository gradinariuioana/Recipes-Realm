@model RecipesRealm.ViewModels.RecipeViewModel

@{
    if (!string.IsNullOrEmpty(ViewBag.Warning)) {
        <h1>@ViewBag.Warning</h1>
    }
    else {
        @Html.HiddenFor(model => model.Recipe_ID)
        <section id="recipe-single">
            <div class="container recipe-container">
                <div class="row recipe-header">
                    <div class="col-12">
                        <div class="row top-section">
                            <div class="col-5 recipe-header-left">
                                <div class="hero-wrapper">
                                    <img src="../../@Html.DisplayFor(model => model.Picture_Path)" alt="@Html.DisplayNameFor(model => model.Picture_Path)">
                                </div>
                                <div class="recipe-user-controls">
                                </div>
                                <div class="recipe-ingredients">
                                    <div class="ingredients-heading">
                                        <h2>Ingredients</h2>
                                    </div>
                                    <div class="row">
                                        <div class="col-12 ingredient-wrapper">
                                            <ul class="ingred-list">
                                                @foreach (var ingred in Model.RecipeIngredients) {
                                                    <li>
                                                        @Html.DisplayFor(modelItem => ingred.Quantity) @Html.DisplayFor(modelItem => ingred.Measurement_Unit) @Html.DisplayFor(modelItem => ingred.Other_Info) @Html.DisplayFor(modelItem => ingred.Ingredient_Name)
                                                        @if (ingred.IsOptional == true) {
                                                            <span>(Optional)</span>
                                                        }
                                                    </li>
                                                }
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-7 single-recipe-details">
                                @using (Html.BeginForm("Deactivate", "Recipe", new { id = Model.Recipe_ID }, FormMethod.Post)) {
                                    <input type="submit" value="Deactivate Recipe" class="btn-info" id="deactivate-btn" />
                                }
                                @using (Html.BeginForm("Delete", "Recipe", new { id = Model.Recipe_ID }, FormMethod.Post)) {
                                    <input type="submit" value="Remove Recipe" class="btn-danger" id="delete-btn" />
                                }

                                <h1>@Html.DisplayFor(model => model.Recipe_Name)</h1>
                                <div class="row">
                                    <div class="col-12 average-rating">
                                        <div class="star-rating">
                                            <div class="star-input">
                                                @{
                                                    var rating = Model.AverageRating;
                                                    for (var i = 5; i > 0; i--) {
                                                        if (i <= rating) {
                                                            <input type="radio" name="rating" id="rating-@i" checked>
                                                            <label for="rating-@i" class="fa fa-star checked-star"></label>
                                                        }
                                                        else {
                                                            <input type="radio" name="rating" id="rating-@i">
                                                            <label for="rating-@i" class="fa fa-star"></label>
                                                        }

                                                    }
                                                }
                                            </div>
                                            <div class="rating-value">
                                                (@rating/5)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-12 user-info">
                                        Posted by
                                        <span class="user-name">
                                            @Html.DisplayFor(model => model.Author_Name)
                                        </span>
                                    </div>
                                    <div class="col-12">
                                        <ul class="categories-wrapper">
                                            @{
                                                foreach (var cat in Model.RecipeCategories) {
                                                    <li class="single-category">
                                                        <a href="/Category/Details/@Html.DisplayFor(modelItem => cat.Category_ID)">@Html.DisplayFor(modelItem => cat.Category_Name)</a>
                                                    </li>
                                                }
                                            }
                                        </ul>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-12">
                                        <div class="recipe-intro">
                                            @Html.DisplayFor(model => model.Recipe_Description)
                                        </div>
                                    </div>

                                    <div class="col-12">
                                        <div class="row recipe-details">
                                            <div class="col-12">
                                                <div class="recipe-detail serves">
                                                    <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 13 16"><title>Serves</title><path d="M6.5 11.4c2.2 0 4.1-1.8 4.1-4.1V5.1C10.6 2.8 8.7 1 6.5 1S2.4 2.8 2.4 5.1v2.3c0 2.2 1.9 4 4.1 4zm0-1.1c-1.6 0-2.9-1.3-2.9-2.9V5.1c0-1.6 1.3-2.9 2.9-2.9 1.6 0 2.9 1.3 2.9 2.9v2.3c0 1.6-1.3 2.9-2.9 2.9z" /><path d="M12.9 14.1c-.3-1.4-1-2.7-2.1-3.6-.1-.1-.2-.1-.4-.1s-.3.1-.4.2c-.1.1-.1.3-.1.4 0 .1.1.3.2.4 1 .9 1.7 2.2 1.8 3.5H1.1c.1-1.4.8-2.6 1.8-3.5.1-.1.2-.2.2-.4 0-.1 0-.3-.1-.4-.1-.1-.3-.2-.4-.2-.1 0-.3 0-.4.1-1.1.9-1.8 2.2-2.1 3.6-.1.4-.1.8-.1 1.3 0 .3.2.6.5.6h11.9c.3 0 .6-.3.6-.6 0-.5 0-.9-.1-1.3z" /></svg>
                                                    <span class="detail_desc">@Html.DisplayNameFor(model => model.Servings):</span> @Html.DisplayFor(model => model.Servings)
                                                </div>

                                                <div class="recipe-detail time">
                                                    <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 15 15"><title>Time</title><path fill-opacity=".9" d="M7.5 0C3.4 0 0 3.4 0 7.5S3.4 15 7.5 15 15 11.6 15 7.5 11.6 0 7.5 0zm0 13.5c-3.3 0-6-2.7-6-6s2.7-6 6-6 6 2.7 6 6-2.7 6-6 6zm.4-9.7H6.8v4.5l3.9 2.4.6-1-3.4-2V3.8z" /></svg>
                                                    <span class="detail_desc">@Html.DisplayNameFor(model => model.Cooking_Time):</span> @Html.DisplayFor(model => model.Cooking_Time)
                                                </div>

                                                <div class="recipe-detail difficulty">
                                                    <span class="detail_desc">@Html.DisplayNameFor(model => model.Difficulty_Level):</span> @Html.DisplayFor(model => model.Difficulty_Level)
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="tags-wrapper col-12">
                                        <div class="tags-list">
                                            <svg viewbox="0 0 27.2 27.2"><g><path fill="#62A5A1" d="M26.4,1.5c0-0.3-0.3-0.6-0.7-0.7L13.8,0L0.2,13.6c-0.2,0.2-0.2,0.6,0,0.9L12.7,27c0.2,0.2,0.6,0.2,0.9,0l13.6-13.6L26.4,1.5z M13.6,25.3c-0.2,0.2-0.6,0.2-0.9,0L2,14.5c-0.2-0.2-0.3-0.6,0-0.9L14.4,1.2l10,0.9c0.3,0,0.7,0.3,0.7,0.7l0.9,10L13.6,25.3z" /><path fill="#62A5A1" d="M17.3,6.3c-1,1-0.9,2.5,0,3.5s2.6,1,3.5,0c1-1,0.9-2.5,0-3.5C19.9,5.4,18.3,5.4,17.3,6.3z M20,9c-0.5,0.5-1.3,0.5-1.8,0s-0.5-1.3,0-1.8c0.5-0.5,1.3-0.5,1.8,0C20.5,7.7,20.5,8.5,20,9z" /></g></svg>
                                            @{
                                                if (Model.RecipeTags.Count > 0) {
                                                    var last = Model.RecipeTags.Last();
                                                    foreach (var tag in Model.RecipeTags) {
                                                        <div class="single-tag">
                                                            @Html.DisplayFor(modelItem => tag.Tag_Name)
                                                            @if (tag != last) {
                                                                <span>,</span>
                                                            }
                                                        </div>
                                                    }
                                                }
                                            }
                                        </div>
                                    </div>

                                    <div class="recipe-nutrition col-12">
                                        <h6>
                                            Nutrition per serving
                                        </h6>
                                        <div class="nutrition-expanded">
                                            <ul>
                                                @foreach (var elem in Model.RecipeNutritionElements) {
                                                    <li>
                                                        <div class="inner">
                                                            <span class="title top">
                                                                @Html.DisplayFor(modelItem => elem.Element_Name)
                                                            </span>
                                                            <span class="bottom">
                                                                @Html.DisplayFor(modelItem => elem.Value) @Html.DisplayFor(modelItem => elem.Measurement_Unit)
                                                            </span>
                                                        </div>
                                                        <div class="moreInfo">
                                                            <h5>
                                                                @Html.DisplayFor(modelItem => elem.Element_Name)
                                                            </h5>
                                                            <p>
                                                                @Html.DisplayFor(modelItem => elem.Element_Description)
                                                            </p>
                                                        </div>
                                                    </li>
                                                }
                                            </ul>
                                        </div>
                                    </div>
                                </div>

                                <div class="recipe-instructions">
                                    <div class="instructions-wrapper">
                                        <div class="method-p">
                                            <h2>Method</h2>
                                            <div class="">
                                                @foreach (var step in Model.RecipeSteps) {
                                                    <div class="step-wrapper">
                                                        <div class="title">
                                                            @if (step.Step_Number.HasValue) {
                                                                <span class="number">@Html.DisplayFor(modelItem => step.Step_Number). </span>
                                                            }
                                                            @Html.DisplayFor(modelItem => step.Step_Title)
                                                            @if (step.IsOptional == true) {
                                                                <span class="optional">(Optional)</span>
                                                            }
                                                        </div>
                                                        <p>
                                                            @Html.DisplayFor(modelItem => step.Step_Description)
                                                        </p>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    }
}
